import { type } from 'arktype'
import type { Maybe, Tagged } from '../types'

// #region ComfyNodeID
export type ComfyNodeId = Tagged<string, 'ComfyNodeId'>
export const ComfyNodeId_ark = type.string.as<ComfyNodeId>()

// #region ComfyNodeMetadata
export type ComfyNodeMetadata = {
   id?: Maybe<ComfyNodeId>

   /** @deprecated */
   tag?: string

   /** list of tags;
    * those tags will be copied to assets generated by this node.
    * e.g. you can add tags to SaveImage or PreviewImage to automatically tag images they'll produce. */
   tags?: string[]

   /** If the node produces an image, image will be stored in an ImageStore with given name.
    * ImageStore are useful for example to always have access to the image when re-running a workflow despite ComfyUI caching. */
   storeAs?: string
}
export const ComfyNodeMetadata_ark = type({
   'id?': ComfyNodeId_ark,
   'tag?': 'string',
   'tags?': 'string[]',
   'storeAs?': 'string',
}).as<ComfyNodeMetadata>()
